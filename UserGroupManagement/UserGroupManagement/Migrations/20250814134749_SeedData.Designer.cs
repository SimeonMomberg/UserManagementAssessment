// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using UserGroupManagement.Data;

#nullable disable

namespace UserGroupManagement.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250814134749_SeedData")]
    partial class SeedData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("UserGroup", b =>
                {
                    b.Property<int>("UsersId")
                        .HasColumnType("int");

                    b.Property<int>("GroupsId")
                        .HasColumnType("int");

                    b.HasKey("UsersId", "GroupsId");

                    b.HasIndex("GroupsId");

                    b.ToTable("UserGroup");

                    b.HasData(
                        new
                        {
                            UsersId = 1,
                            GroupsId = 1
                        },
                        new
                        {
                            UsersId = 2,
                            GroupsId = 2
                        },
                        new
                        {
                            UsersId = 3,
                            GroupsId = 3
                        });
                });

            modelBuilder.Entity("UserGroupManagement.Models.Group", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Groups");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Admins"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Editors"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Viewers"
                        });
                });

            modelBuilder.Entity("UserGroupManagement.Models.Permission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("GroupId")
                        .HasColumnType("int");

                    b.Property<string>("PermissionName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("GroupId");

                    b.ToTable("Permissions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            GroupId = 1,
                            PermissionName = "Level 1"
                        },
                        new
                        {
                            Id = 2,
                            GroupId = 1,
                            PermissionName = "Level 2"
                        },
                        new
                        {
                            Id = 3,
                            GroupId = 2,
                            PermissionName = "Level 1"
                        },
                        new
                        {
                            Id = 4,
                            GroupId = 2,
                            PermissionName = "Level 2"
                        },
                        new
                        {
                            Id = 5,
                            GroupId = 3,
                            PermissionName = "Level 1"
                        });
                });

            modelBuilder.Entity("UserGroupManagement.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Alice"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Bob"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Charlie"
                        });
                });

            modelBuilder.Entity("UserGroup", b =>
                {
                    b.HasOne("UserGroupManagement.Models.Group", null)
                        .WithMany()
                        .HasForeignKey("GroupsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UserGroupManagement.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UsersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("UserGroupManagement.Models.Permission", b =>
                {
                    b.HasOne("UserGroupManagement.Models.Group", "Group")
                        .WithMany("Permissions")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Group");
                });

            modelBuilder.Entity("UserGroupManagement.Models.Group", b =>
                {
                    b.Navigation("Permissions");
                });
#pragma warning restore 612, 618
        }
    }
}
